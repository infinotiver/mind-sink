name: Pull Request Checks

on:
  pull_request:
    branches: [main, develop]

jobs:
  backend-checks:
    name: Backend Tests & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio flake8 black

      - name: Run linting with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 backend --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. Max line length 120
          flake8 backend --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
        continue-on-error: true

      - name: Check code formatting with black
        run: black --check backend
        continue-on-error: true

      - name: Run backend tests (if any)
        run: |
          # For now, just validate imports work
          python -c "from backend import main, auth, crud, models, database; print('Backend imports successful')"

  frontend-checks:
    name: Frontend Build & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint
        continue-on-error: true

      - name: Type check
        working-directory: ./frontend
        run: npx tsc --noEmit

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 7

  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [backend-checks, frontend-checks]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "Backend checks: ${{ needs.backend-checks.result }}"
          echo "Frontend checks: ${{ needs.frontend-checks.result }}"
          if [ "${{ needs.backend-checks.result }}" == "failure" ] || [ "${{ needs.frontend-checks.result }}" == "failure" ]; then
            echo "❌ Some checks failed"
            exit 1
          else
            echo "✅ All checks passed"
          fi
